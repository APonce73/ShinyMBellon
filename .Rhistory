popup = paste(sep = " ","Nombre:",inat1$Nombre,
"<br/>","N Científico:",inat1$NScientific)) %>%
#Select the kind of map: http://leaflet-extras.github.io/leaflet-providers/preview/
addProviderTiles("OpenStreetMap.BlackAndWhite")
inat <- get_inat_obs_user("aliciamstt")
head(inat)
inat <- data.frame("aliciamstt",inat )
head(inat)
inat2 <- get_inat_obs_user("ooliver")
inat <- rbind(inat, inat2)
inat <- cbind(inat, inat2)
inat2
names(inat)
names(inat2)
inat1 <- get_inat_obs_user("aliciamstt")
is.na(inat1) <- inat==''
names(inat1)
inat1 <- inat1 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat1)
inat2 <- get_inat_obs_user("ooliver")
is.na(inat2) <- inat2==''
is.na(inat1) <- inat1==''
inat1 <- get_inat_obs_user("aliciamstt")
is.na(inat1) <- inat1==''
names(inat1)
inat1 <- inat1 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat1)
inat2 <- get_inat_obs_user("ooliver")
is.na(inat2) <- inat2==''
names(inat2)
inat2 <- inat2 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat2)
inat1 <- rbind(inat1,inat2)
names(inat1) <- c("lat", "lng", "NScientific", "datatime", "Nombre" , "usuario")
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = inat1, ~lng, ~lat, color= TTT, radius = 3,
popup = paste(sep = " ","Nombre:",inat1$Nombre,
"<br/>","N Científico:",inat1$NScientific,
"<br/>","Usuarios:",inat1$usuario)) %>%
#Select the kind of map: http://leaflet-extras.github.io/leaflet-providers/preview/
addProviderTiles("OpenStreetMap.BlackAndWhite")
inat3 <- get_inat_obs_user("gabrielamaheletlozadaaranda")
is.na(inat3) <- inat3==''
names(inat3)
inat3 <- inat3 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
inat1 <- rbind(inat1,inat2, inat3)
names(inat3)
inat1 <- rbind(inat1, inat2)
inat1 <- get_inat_obs_user("aliciamstt")
is.na(inat1) <- inat1==''
names(inat1)
inat1 <- inat1 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat1)
inat2 <- get_inat_obs_user("ooliver")
is.na(inat2) <- inat2==''
names(inat2)
inat2 <- inat2 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat2)
inat3 <- get_inat_obs_user("gabrielamaheletlozadaaranda")
is.na(inat3) <- inat3==''
names(inat3)
inat3 <- inat3 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat3)
inat1 <- rbind(inat1, inat2)
inat1 <- rbind(inat1, inat3)
names(inat1) <- c("lat", "lng", "NScientific", "datatime", "Nombre" , "usuario")
TTT <- c(brewer.pal(8,"Dark2"))
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = inat1, ~lng, ~lat, color= TTT, radius = 3,
popup = paste(sep = " ","Nombre:",inat1$Nombre,
"<br/>","N Científico:",inat1$NScientific,
"<br/>","Usuarios:",inat1$usuario)) %>%
#Select the kind of map: http://leaflet-extras.github.io/leaflet-providers/preview/
addProviderTiles("OpenStreetMap.BlackAndWhite")
inat1 <- inat1 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
inat1 <- get_inat_obs_user("aliciamstt")
is.na(inat1) <- inat1==''
names(inat1)
inat1 <- inat1 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat1)
inat2 <- get_inat_obs_user("carlos2")
is.na(inat2) <- inat2==''
names(inat2)
inat2 <- inat2 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat2)
inat1 <- rbind(inat1, inat2)
names(inat1) <- c("lat", "lng", "NScientific", "datatime", "Nombre" , "usuario")
TTT <- c(brewer.pal(8,"Dark2"))
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = inat1, ~lng, ~lat, color= TTT, radius = 3,
popup = paste(sep = " ","Nombre:",inat1$Nombre,
"<br/>","N Científico:",inat1$NScientific,
"<br/>","Usuarios:",inat1$usuario)) %>%
#Select the kind of map: http://leaflet-extras.github.io/leaflet-providers/preview/
addProviderTiles("OpenStreetMap.BlackAndWhite")
inat2 <- get_inat_obs_user("carlos2")
is.na(inat2) <- inat2==''
names(inat2)
inat2 <- inat2 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat2)
dim(inat2)
inat2 <- get_inat_obs_user("carlos2")
head(inat2)
dim(inat2)
inat2 <- get_inat_obs_user("carlos2", maxresults = 5000)
dim(inat2)
is.na(inat2) <- inat2==''
names(inat2)
inat2 <- inat2 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat2)
dim(inat2)
inat1 <- rbind(inat1, inat2)
head(inat1)
head(inat2)
inat1 <- get_inat_obs_user("aliciamstt")
inat1 <- get_inat_obs_user("aliciamstt", maxresults = 5000)
is.na(inat1) <- inat1==''
names(inat1)
inat1 <- inat1 %>%
select(latitude, longitude, scientific_name, datetime, common_name, user_login)%>%
distinct() %>%
na.omit()
names(inat1)
inat1 <- rbind(inat1, inat2)
names(inat1) <- c("lat", "lng", "NScientific", "datatime", "Nombre" , "usuario")
TTT <- c(brewer.pal(8,"Dark2"))
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = inat1, ~lng, ~lat, color= TTT, radius = 3,
popup = paste(sep = " ","Nombre:",inat1$Nombre,
"<br/>","N Científico:",inat1$NScientific,
"<br/>","Usuarios:",inat1$usuario)) %>%
#Select the kind of map: http://leaflet-extras.github.io/leaflet-providers/preview/
addProviderTiles("OpenStreetMap.BlackAndWhite")
inat1 <- get_inat_obs_user("aliciamstt", maxresults = 5000)
is.na(inat1) <- inat1==''
head(inat1)
WallMart <- 287.14
WallMart <- 131.5
CafeEuropa <- 230
WallMart <- 131.5
WallMart1 <- 287.14
CafeEuropa + WallMart + WallMart1
install.packages("packcircle")
library(devtools)
devtools::install_github("mbedward/packcircle")
devtools::install_github("mbedward/packcircles")
library(packcircles)
library(ggplot2)
library(gridExtra)
search()
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
library(packcircles)
library(ggplot2)
library(gridExtra)
search()
ncircles <- 200
limits <- c(-50, 50)
inset <- diff(limits) / 3
rmax <- 20
xyr <- data.frame(
x = runif(ncircles, min(limits) + inset, max(limits) - inset),
y = runif(ncircles, min(limits) + inset, max(limits) - inset),
r = rbeta(ncircles, 1, 10) * rmax)
xyf
xyr
res <- circleLayout(xyr, limits, limits, maxiter = 1000)
res
cat(res$niter, "iterations performed")
dat.before <- circlePlotData(xyr)
dat.before
dat.after <- circlePlotData(res$layout)
doPlot <- function(dat, title)
ggplot(dat) +
geom_polygon(aes(x, y, group=id), colour="brown", fill="burlywood", alpha=0.3) +
coord_equal(xlim=limits, ylim=limits) +
theme_bw() +
theme(axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank()) +
labs(title=title)
grid.arrange(
doPlot(dat.before, "before"),
doPlot(dat.after, "after"),
nrow=1)
ggplot(res$layout) +
geom_polygon(aes(x, y, group=id), colour="brown", fill="burlywood", alpha=0.3) +
coord_equal(xlim=limits, ylim=limits) +
theme_bw() +
theme(axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank()) +
labs(title=title)
head(res$layout)
ggplot(res$layout) +
geom_polygon(aes(x, y, group=radius), colour="brown", fill="burlywood", alpha=0.3) +
coord_equal(xlim=limits, ylim=limits) +
theme_bw() +
theme(axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank()) +
labs(title=title)
ggplot(res$layout) +
geom_polygon(aes(x, y), colour="brown", fill="burlywood", alpha=0.3) +
coord_equal(xlim=limits, ylim=limits) +
theme_bw() +
theme(axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank()) +
labs(title=title)
inset
xmax <- 100
ymax <- 100
rmin <- 10
rmax <- 20
N <- 20
layout <- data.frame(id = 1:N,
x = runif(N, 0, xmax),
y = runif(N, 0, ymax),
radius = runif(N, rmin, rmax))
layout
verts <- circleLayoutVertices(layout, idcol = 1, xysizecols = 2:4, sizetype = "radius")
verts
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = id)) +
coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = NULL)) +
coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = "NULL")) +
coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = "")) +
coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = id)) +
coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = id)) +
#  coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = id)) +
coord_equal() +
theme_bw()
internal <- list( c(1, 3, 4, 5), c(2, 3, 4, 6) )
external <- data.frame(id=3:6, radius=1.0)
packing <- circleGraphLayout(internal, external)
ggplot() +
geom_polygon(data = packing, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = id)) +
coord_equal() +
theme_bw()
ggplot() +
geom_polygon(data = packing, aes(x, y, group = id),
fill = "grey90",
colour = "black")
plot(packing)
packing
ggplot() +
geom_polygon(data = packing, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = packing, aes(x, y, label = id)) +
coord_equal() +
theme_bw()
verts
ggplot() +
geom_polygon(data = verts, aes(x, y, group = id),
fill = "grey90",
colour = "black") +
geom_text(data = layout, aes(x, y, label = id)) +
coord_equal() +
theme_bw()
library(ggplot2)
library(RColorBrewer)
installed.packages("ggplot2")
installed.packages(ggplot2)
installed.packages("tidyverse")
install.packages("ggplot2")
install.packages("ggplot2")
library(plotly)
data(iris)
head(iris)
p <- plot_ly(iris, x = Petal.Length, y = Petal.Width, color = Species, mode = "markers")
p <- plot_ly(iris, x = "Petal.Length", y = "Petal.Width", color = Species, mode = "markers")
p <- plot_ly(iris, x = "Petal.Length", y = "Petal.Width", color = "Species", mode = "markers")
p
p <- plot_ly(iris, x = "Petal.Length", y = "Petal.Width", color = "Species")
p
p <- plot_ly(data = iris, x = Petal.Length, y = Petal.Width, color = Species)
p <- plot_ly(data = iris, x = iris$Petal.Length, y = iris$Petal.Width, color = iris$Species)
p
frameBorder="0">
</iframe>
<img src="https://plot.ly/~RPlotBot/501.png">
library(FD)
help("FD-package")
115/174
88/126
shiny::runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
HHH <- c(rev(brewer.pal(3, "Reds")),brewer.pal(3, "Blues"))
HHH
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
HHH <- c(rev(brewer.pal(1, "Reds")),brewer.pal(1, "Blues"))
HHH
brewer.pal(1, "Reds")
HHH <- c(rev(brewer.pal(3, "Reds")),brewer.pal(3, "Blues"))
HHH
HHH1$value
HHH[1,6]
HHH[c(1,6)]
runApp('Dropbox/GitHub/ShinyMBellon')
shiny::runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
pal1 <- colorNumeric('OrRd', 2)
pal1
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
pal <- colorNumeric(HHH, domain = HHH1$value)
HHH <- c(rev(brewer.pal(3, "Reds")),brewer.pal(3, "Blues"))
pal <- colorNumeric(HHH, domain = HHH1$value)
brewer.pal(3, "Blues")
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
runApp('Dropbox/GitHub/ShinyMBellon')
setwd("~/Dropbox/GitHub/ShinyMBellon/")
Municipios <- read.delim("DatosShiny.csv", header = T, sep = "," , dec = ".")
head(Municipios)
levels(as.factor(Municipios$rend2010))
Municipios$rend2010
Municipios$Idcode <- sprintf("%05d", Municipios$Idcode)
dim(Municipios)
head(Municipios)
names(Municipios)[1] <- c("region")
str(Municipios)
tail(Municipios,50)
names(Municipios)
dim(Municipios)
Municipios <- Municipios %>%
filter(!is.na(region)) %>%
filter(!is.na(Categorie))
dim(Municipios)
data("df_mxmunicipio")
head(df_mxmunicipio)
head(df_mxmunicipio)
dim(df_mxmunicipio)
TTT <- df_mxmunicipio[,c(1:8,16)]
head(TTT)
str(TTT)
MxMunicipios <- merge(TTT, Municipios, by = "region")
head(MxMunicipios)
MxMunicipios$state_name <- as.factor(MxMunicipios$state_name)
MxMunicipios$Categorie <- as.factor(MxMunicipios$Categorie)
head(MxMunicipios)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
